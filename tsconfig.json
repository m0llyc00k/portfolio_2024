// {
// 	"extends": "./.svelte-kit/tsconfig.json",
// 	"compilerOptions": {
// 		"allowJs": true,
// 		"checkJs": true,
// 		"esModuleInterop": true,
// 		"forceConsistentCasingInFileNames": true,
// 		"resolveJsonModule": true,
// 		"skipLibCheck": true,
// 		"sourceMap": true,
// 		"strict": true
// 	}
// 	// Path aliases are handled by https://kit.svelte.dev/docs/configuration#alias
// 	//
// 	// If you want to overwrite includes/excludes, make sure to copy over the relevant includes/excludes
// 	// from the referenced tsconfig.json - TypeScript does not merge them in
// }
{
	"extends": "./.svelte-kit/tsconfig.json",
	"compilerOptions": {
				"baseUrl": ".",
		"paths": {
			"$lib": ["src/lib"],
			"$lib/*": ["src/lib/*"]
		},
		"moduleResolution": "node",
		"target": "esnext",
		"module": "esnext",
		    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable checkJs if you'd like to use dynamic types in JS.
     * Note that setting allowJs false does not prevent the use
     * of JS in `.svelte` files.
     */
	 "allowJs": true,
	 "checkJs": true,
	 "esModuleInterop": true,
	 "forceConsistentCasingInFileNames": true,
	 "resolveJsonModule": true,
	 "skipLibCheck": true,
	 "sourceMap": true,
	 "strict": true
		// "allowJs": true,
		// "checkJs": false,
		// "esModuleInterop": true,
		// "useDefineForClassFields": true,
		// "forceConsistentCasingInFileNames": true,
		// "isolatedModules": true,
		// "resolveJsonModule": true,
		// "skipLibCheck": true,
		// "sourceMap": true,
		// "strict": true
	},
		/**
	 * Use global.d.ts instead of compilerOptions.types
	 * to avoid limiting type declarations.
	 */
	"include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte", "src/main.ts"]
	// "references": [{ "path": "./tsconfig.node.json" }]
}
